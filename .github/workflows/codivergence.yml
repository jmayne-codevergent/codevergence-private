name: Compare Two Repositories

on:
  pull_request:
    branches:
      - '**'  # Run on PRs from any branch
  workflow_dispatch:  # This allows the workflow to be manually triggered

jobs:
  compare:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Repository A
      - name: Checkout Repo A
        uses: actions/checkout@v4
        with:
          repository: jmayne-codevergent/codevergence-private  # Replace with your actual repository name
          token: ${{ secrets.GITHUB_TOKEN }}
          path: repo-a

      # Step 2: Checkout Repository B
      - name: Checkout Repo B
        uses: actions/checkout@v4
        with:
          repository: jmayne-codevergent/codevergence-public  # Replace with your actual repository name
          token: ${{ secrets.GITHUB_TOKEN }}
          path: repo-b

      # Step 3: Compare the two repositories using diff
      - name: Compare Repos
        run: |
          echo "Comparing repo-a with repo-b..."
          (diff -rq repo-a/ repo-b/ || true) > diff_output.txt


      # Step 4: Produce output (commit comparison)
      - name: Compare Repos through shell
        run: |
          {
          REPO1="repo-a"
          REPO2="repo-b"
          
          if [ ! -d "$REPO1/.git" ]; then
              echo "Error: $REPO1 is not a valid git repository"
              exit 1
          fi
          
          if [ ! -d "$REPO2/.git" ]; then
              echo "Error: $REPO2 is not a valid git repository"
              exit 1
          fi
          
          # Get commit hashes
          COMMITS1=$(git -C "$REPO1" log --pretty=format:'%H')
          COMMITS2=$(git -C "$REPO2" log --pretty=format:'%H')
          
          # Convert to arrays
          mapfile -t ARRAY1 <<< "$COMMITS1"
          mapfile -t ARRAY2 <<< "$COMMITS2"
          
          echo "Commits in $REPO1 but not in $REPO2:"
          for commit in "${ARRAY1[@]}"; do
            if ! grep -Fxq "$commit" <<< "${COMMITS2}"; then
              echo "$commit"
            fi
          done
          
          echo "Number of commits in repoA but not repoB: ${#ARRAY1[@]}"
          
          echo
          echo "Commits in $REPO2 but not in $REPO1:"
          for commit in "${ARRAY2[@]}"; do
            if ! grep -Fxq "$commit" <<< "${COMMITS1}"; then
              echo "$commit"
            fi
          done
          
          echo "Number of commits in repoB but not repoA: ${#ARRAY2[@]}"
          } > commit_output.txt

      # Step 5: Check the output length and fail if more than 25 lines
      - name: Check Output Length
        run: |
          # Combine the diff output and commit comparison output
          TOTAL_OUTPUT=$(cat diff_output.txt commit_output.txt)

          # Count the number of lines
          LINE_COUNT=$(echo "$TOTAL_OUTPUT" | wc -l)

          echo "Total output lines: $LINE_COUNT"

          # Fail the workflow if the output exceeds 25 lines
          if [ "$LINE_COUNT" -gt 25 ]; then
            echo "Error: Output exceeds 25 lines. Workflow failing."
            exit 1
          fi
